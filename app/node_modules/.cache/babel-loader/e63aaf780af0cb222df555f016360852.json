{"ast":null,"code":"function getGraphData(records, partitions) {\n  console.log(paritions);\n  const viewsPartitoned = partitions.reduce((acc, partition) => ({ ...acc,\n    [partition]: 0\n  }), {});\n  const engagementPartitioned = partitions.reduce((acc, partition) => ({ ...acc,\n    [partition]: 0\n  }), {});\n  let partitionIndex = 0;\n  records.every(record => {\n    while (new Date(record['Date']) < new Date(partitions[partitionIndex])) {\n      ++partitionIndex;\n\n      if (partitionIndex >= partitions.length) {\n        return false;\n      }\n    }\n\n    const partition = partitions[partitionIndex];\n    viewsPartitoned[partition] += parseInt(record['Views']);\n    engagementPartitioned[partition] += parseInt(record['Total Engagement']);\n    return true;\n  });\n  return {\n    labels: partitions.reverse(),\n    datasets: [{\n      label: 'Views',\n      data: Object.values(viewsPartitoned).reverse(),\n      backgroundColor: 'rgba(255, 99, 132, 0.5)'\n    }, {\n      label: 'Engagement',\n      data: Object.values(engagementPartitioned).reverse(),\n      backgroundColor: 'rgba(53, 162, 235, 0.5)'\n    }]\n  };\n}\n\nmodule.exports = getGraphData;","map":{"version":3,"names":["getGraphData","records","partitions","console","log","paritions","viewsPartitoned","reduce","acc","partition","engagementPartitioned","partitionIndex","every","record","Date","length","parseInt","labels","reverse","datasets","label","data","Object","values","backgroundColor","module","exports"],"sources":["/Users/milanravenell/Documents/digital_dash/digital-dash-app/src/data-manipulations/get-graph-data.js"],"sourcesContent":["function getGraphData(records, partitions) {\n    console.log(paritions)\n    const viewsPartitoned = partitions.reduce((acc, partition) => ({ ...acc, [partition]: 0 }), {});\n    const engagementPartitioned = partitions.reduce((acc, partition) => ({ ...acc, [partition]: 0 }), {});\n\n    let partitionIndex = 0;\n    records.every((record) => {\n        while (new Date(record['Date']) < new Date(partitions[partitionIndex])) {\n            ++partitionIndex;\n            if (partitionIndex >= partitions.length) {\n                return false;\n            }\n        }\n\n        const partition = partitions[partitionIndex];\n        viewsPartitoned[partition] += parseInt(record['Views']);\n        engagementPartitioned[partition] += parseInt(record['Total Engagement']);\n        return true;\n    });\n\n    return {\n        labels: partitions.reverse(),\n        datasets: [\n            {\n                label: 'Views',\n                data: Object.values(viewsPartitoned).reverse(),\n                backgroundColor: 'rgba(255, 99, 132, 0.5)',\n            },\n            {\n                label: 'Engagement',\n                data: Object.values(engagementPartitioned).reverse(),\n                backgroundColor: 'rgba(53, 162, 235, 0.5)',\n            },\n        ]\n    };\n}\n\nmodule.exports = getGraphData;"],"mappings":"AAAA,SAASA,YAAT,CAAsBC,OAAtB,EAA+BC,UAA/B,EAA2C;EACvCC,OAAO,CAACC,GAAR,CAAYC,SAAZ;EACA,MAAMC,eAAe,GAAGJ,UAAU,CAACK,MAAX,CAAkB,CAACC,GAAD,EAAMC,SAAN,MAAqB,EAAE,GAAGD,GAAL;IAAU,CAACC,SAAD,GAAa;EAAvB,CAArB,CAAlB,EAAoE,EAApE,CAAxB;EACA,MAAMC,qBAAqB,GAAGR,UAAU,CAACK,MAAX,CAAkB,CAACC,GAAD,EAAMC,SAAN,MAAqB,EAAE,GAAGD,GAAL;IAAU,CAACC,SAAD,GAAa;EAAvB,CAArB,CAAlB,EAAoE,EAApE,CAA9B;EAEA,IAAIE,cAAc,GAAG,CAArB;EACAV,OAAO,CAACW,KAAR,CAAeC,MAAD,IAAY;IACtB,OAAO,IAAIC,IAAJ,CAASD,MAAM,CAAC,MAAD,CAAf,IAA2B,IAAIC,IAAJ,CAASZ,UAAU,CAACS,cAAD,CAAnB,CAAlC,EAAwE;MACpE,EAAEA,cAAF;;MACA,IAAIA,cAAc,IAAIT,UAAU,CAACa,MAAjC,EAAyC;QACrC,OAAO,KAAP;MACH;IACJ;;IAED,MAAMN,SAAS,GAAGP,UAAU,CAACS,cAAD,CAA5B;IACAL,eAAe,CAACG,SAAD,CAAf,IAA8BO,QAAQ,CAACH,MAAM,CAAC,OAAD,CAAP,CAAtC;IACAH,qBAAqB,CAACD,SAAD,CAArB,IAAoCO,QAAQ,CAACH,MAAM,CAAC,kBAAD,CAAP,CAA5C;IACA,OAAO,IAAP;EACH,CAZD;EAcA,OAAO;IACHI,MAAM,EAAEf,UAAU,CAACgB,OAAX,EADL;IAEHC,QAAQ,EAAE,CACN;MACIC,KAAK,EAAE,OADX;MAEIC,IAAI,EAAEC,MAAM,CAACC,MAAP,CAAcjB,eAAd,EAA+BY,OAA/B,EAFV;MAGIM,eAAe,EAAE;IAHrB,CADM,EAMN;MACIJ,KAAK,EAAE,YADX;MAEIC,IAAI,EAAEC,MAAM,CAACC,MAAP,CAAcb,qBAAd,EAAqCQ,OAArC,EAFV;MAGIM,eAAe,EAAE;IAHrB,CANM;EAFP,CAAP;AAeH;;AAEDC,MAAM,CAACC,OAAP,GAAiB1B,YAAjB"},"metadata":{},"sourceType":"module"}