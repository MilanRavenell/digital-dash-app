{"ast":null,"code":"var _jsxFileName = \"/Users/milanravenell/Documents/digital_dash/digital-dash-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport logo from './logo.svg';\nimport './styles/App.css';\nimport MainContentContainer from './MainContentContainer';\nimport SignIn from './SignIn';\nimport AddPlatformSelection from './AddPlatformSelection';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [state, setState] = React.useState({\n    user: null,\n    data: null,\n    signUpMode: false,\n    screen: 'sign-in'\n  });\n  React.useEffect(() => {\n    if (state.screen === 'loading') {\n      axios.get(`http://localhost:8000/get-data?username=${state.user}`).then(response => {\n        if (response.data) {\n          setState({ ...state,\n            data: response.data,\n            screen: 'main-content'\n          });\n        }\n      });\n    }\n  });\n  const attemptSignIn = React.useCallback((username, password) => {\n    axios.get(`http://localhost:8000/verify-user?username=${username}&pass=${password}`).then(response => {\n      if (response.data) {\n        setState(prevState => ({ ...prevState,\n          user: username,\n          screen: 'loading'\n        }));\n      }\n    });\n  }, []);\n  const goToAddPlatformSelection = React.useCallback((username, password) => {\n    axios.get(`http://localhost:8000/init-user?username=${username}&pass=${password}`).then(response => {\n      if (response.data) {\n        setState(prevState => ({ ...prevState,\n          screen: 'add-platform-selection',\n          user: username\n        }));\n      }\n    });\n  }, []);\n  const goToAddPlatform = React.useCallback(platform => {\n    setState(prevState => ({ ...prevState,\n      screen: 'add-platform-selection',\n      user: username\n    }));\n  }, []);\n  const addPlatformAccount = React.useCallback((username, password, platform) => {\n    return axios.get(`http://localhost:8000/update-user?username=${state.user}&${platform}_user=${username}&${platform}_pass=${password}`);\n  }, [state]);\n  const finishSignUp = React.useCallback(() => {\n    axios.get(`http://localhost:8000/run-scrapers?username=${state.user}`);\n    setState(prevState => ({ ...prevState,\n      signUpMode: false\n    }));\n  }, [state]);\n\n  const getContent = () => {\n    switch (state.screen) {\n      case 'sign-in':\n        return /*#__PURE__*/_jsxDEV(SignIn, {\n          handleSubmit: attemptSignIn,\n          handleSignUp: goToAddPlatformSelection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this);\n\n      case 'add-platform-selection':\n        return /*#__PURE__*/_jsxDEV(AddPlatformSelection, {\n          handleSubmit: addPlatformAccount,\n          handleContinue: finishSignUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this);\n\n      case 'add-platform':\n        return;\n\n      case 'loading':\n        return 'Loading';\n\n      case 'main-content':\n        return /*#__PURE__*/_jsxDEV(MainContentContainer, {\n          user: state.user,\n          data: state.data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), getContent()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"od89fpyZ8+7OKQJI729eDGzI9sY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","logo","MainContentContainer","SignIn","AddPlatformSelection","axios","App","state","setState","useState","user","data","signUpMode","screen","useEffect","get","then","response","attemptSignIn","useCallback","username","password","prevState","goToAddPlatformSelection","goToAddPlatform","platform","addPlatformAccount","finishSignUp","getContent"],"sources":["/Users/milanravenell/Documents/digital_dash/digital-dash-app/src/App.js"],"sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './styles/App.css';\nimport MainContentContainer from './MainContentContainer';\nimport SignIn from './SignIn';\nimport AddPlatformSelection from './AddPlatformSelection';\nimport axios from \"axios\";\n\nconst App = () => {\n  const [state, setState] = React.useState({\n    user: null,\n    data: null,\n    signUpMode: false,\n    screen: 'sign-in'\n  });\n\n  React.useEffect(() => {\n    if (state.screen === 'loading') {\n      axios.get(`http://localhost:8000/get-data?username=${state.user}`).then((response) => {\n        if (response.data) {\n          setState({\n            ...state,\n            data: response.data,\n            screen: 'main-content',\n          });\n        }\n      });\n    }\n  });\n\n  const attemptSignIn = React.useCallback((username, password) => {\n    axios.get(`http://localhost:8000/verify-user?username=${username}&pass=${password}`).then((response) => {\n      if (response.data) {\n        setState((prevState) => ({\n          ...prevState,\n          user: username,\n          screen: 'loading',\n        }));\n      }\n    });\n  }, []);\n\n  const goToAddPlatformSelection = React.useCallback((username, password) => {\n    axios.get(`http://localhost:8000/init-user?username=${username}&pass=${password}`).then((response) => {\n      if (response.data) {\n        setState((prevState) => ({\n          ...prevState,\n          screen: 'add-platform-selection',\n          user: username,\n        }));\n      }\n    });\n  }, []);\n\n  const goToAddPlatform = React.useCallback((platform) => {\n    setState((prevState) => ({\n      ...prevState,\n      screen: 'add-platform-selection',\n      user: username,\n    }));\n  }, []);\n\n  const addPlatformAccount = React.useCallback((username, password, platform) => {\n    return axios.get(`http://localhost:8000/update-user?username=${state.user}&${platform}_user=${username}&${platform}_pass=${password}`)\n  }, [state]);\n\n  const finishSignUp = React.useCallback(() => {\n    axios.get(`http://localhost:8000/run-scrapers?username=${state.user}`)\n\n    setState((prevState) => ({\n      ...prevState,\n      signUpMode: false,\n    }));\n  }, [state]);\n\n  const getContent = () => {\n    switch(state.screen) {\n      case 'sign-in':\n        return (<SignIn handleSubmit={attemptSignIn} handleSignUp={goToAddPlatformSelection}/>);\n      case 'add-platform-selection':\n        return (<AddPlatformSelection handleSubmit={addPlatformAccount} handleContinue={finishSignUp}/>);\n      case 'add-platform':\n        return \n      case 'loading':\n        return 'Loading';\n      case 'main-content':\n        return (<MainContentContainer user={state.user} data={state.data}/>)\n    }\n  }\n  \n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n      </header>\n      { getContent() }\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,kBAAP;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,KAAK,CAACS,QAAN,CAAe;IACvCC,IAAI,EAAE,IADiC;IAEvCC,IAAI,EAAE,IAFiC;IAGvCC,UAAU,EAAE,KAH2B;IAIvCC,MAAM,EAAE;EAJ+B,CAAf,CAA1B;EAOAb,KAAK,CAACc,SAAN,CAAgB,MAAM;IACpB,IAAIP,KAAK,CAACM,MAAN,KAAiB,SAArB,EAAgC;MAC9BR,KAAK,CAACU,GAAN,CAAW,2CAA0CR,KAAK,CAACG,IAAK,EAAhE,EAAmEM,IAAnE,CAAyEC,QAAD,IAAc;QACpF,IAAIA,QAAQ,CAACN,IAAb,EAAmB;UACjBH,QAAQ,CAAC,EACP,GAAGD,KADI;YAEPI,IAAI,EAAEM,QAAQ,CAACN,IAFR;YAGPE,MAAM,EAAE;UAHD,CAAD,CAAR;QAKD;MACF,CARD;IASD;EACF,CAZD;EAcA,MAAMK,aAAa,GAAGlB,KAAK,CAACmB,WAAN,CAAkB,CAACC,QAAD,EAAWC,QAAX,KAAwB;IAC9DhB,KAAK,CAACU,GAAN,CAAW,8CAA6CK,QAAS,SAAQC,QAAS,EAAlF,EAAqFL,IAArF,CAA2FC,QAAD,IAAc;MACtG,IAAIA,QAAQ,CAACN,IAAb,EAAmB;QACjBH,QAAQ,CAAEc,SAAD,KAAgB,EACvB,GAAGA,SADoB;UAEvBZ,IAAI,EAAEU,QAFiB;UAGvBP,MAAM,EAAE;QAHe,CAAhB,CAAD,CAAR;MAKD;IACF,CARD;EASD,CAVqB,EAUnB,EAVmB,CAAtB;EAYA,MAAMU,wBAAwB,GAAGvB,KAAK,CAACmB,WAAN,CAAkB,CAACC,QAAD,EAAWC,QAAX,KAAwB;IACzEhB,KAAK,CAACU,GAAN,CAAW,4CAA2CK,QAAS,SAAQC,QAAS,EAAhF,EAAmFL,IAAnF,CAAyFC,QAAD,IAAc;MACpG,IAAIA,QAAQ,CAACN,IAAb,EAAmB;QACjBH,QAAQ,CAAEc,SAAD,KAAgB,EACvB,GAAGA,SADoB;UAEvBT,MAAM,EAAE,wBAFe;UAGvBH,IAAI,EAAEU;QAHiB,CAAhB,CAAD,CAAR;MAKD;IACF,CARD;EASD,CAVgC,EAU9B,EAV8B,CAAjC;EAYA,MAAMI,eAAe,GAAGxB,KAAK,CAACmB,WAAN,CAAmBM,QAAD,IAAc;IACtDjB,QAAQ,CAAEc,SAAD,KAAgB,EACvB,GAAGA,SADoB;MAEvBT,MAAM,EAAE,wBAFe;MAGvBH,IAAI,EAAEU;IAHiB,CAAhB,CAAD,CAAR;EAKD,CANuB,EAMrB,EANqB,CAAxB;EAQA,MAAMM,kBAAkB,GAAG1B,KAAK,CAACmB,WAAN,CAAkB,CAACC,QAAD,EAAWC,QAAX,EAAqBI,QAArB,KAAkC;IAC7E,OAAOpB,KAAK,CAACU,GAAN,CAAW,8CAA6CR,KAAK,CAACG,IAAK,IAAGe,QAAS,SAAQL,QAAS,IAAGK,QAAS,SAAQJ,QAAS,EAA7H,CAAP;EACD,CAF0B,EAExB,CAACd,KAAD,CAFwB,CAA3B;EAIA,MAAMoB,YAAY,GAAG3B,KAAK,CAACmB,WAAN,CAAkB,MAAM;IAC3Cd,KAAK,CAACU,GAAN,CAAW,+CAA8CR,KAAK,CAACG,IAAK,EAApE;IAEAF,QAAQ,CAAEc,SAAD,KAAgB,EACvB,GAAGA,SADoB;MAEvBV,UAAU,EAAE;IAFW,CAAhB,CAAD,CAAR;EAID,CAPoB,EAOlB,CAACL,KAAD,CAPkB,CAArB;;EASA,MAAMqB,UAAU,GAAG,MAAM;IACvB,QAAOrB,KAAK,CAACM,MAAb;MACE,KAAK,SAAL;QACE,oBAAQ,QAAC,MAAD;UAAQ,YAAY,EAAEK,aAAtB;UAAqC,YAAY,EAAEK;QAAnD;UAAA;UAAA;UAAA;QAAA,QAAR;;MACF,KAAK,wBAAL;QACE,oBAAQ,QAAC,oBAAD;UAAsB,YAAY,EAAEG,kBAApC;UAAwD,cAAc,EAAEC;QAAxE;UAAA;UAAA;UAAA;QAAA,QAAR;;MACF,KAAK,cAAL;QACE;;MACF,KAAK,SAAL;QACE,OAAO,SAAP;;MACF,KAAK,cAAL;QACE,oBAAQ,QAAC,oBAAD;UAAsB,IAAI,EAAEpB,KAAK,CAACG,IAAlC;UAAwC,IAAI,EAAEH,KAAK,CAACI;QAApD;UAAA;UAAA;UAAA;QAAA,QAAR;IAVJ;EAYD,CAbD;;EAgBA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAQ,SAAS,EAAC;IAAlB;MAAA;MAAA;MAAA;IAAA,QADF,EAIIiB,UAAU,EAJd;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD,CA3FD;;GAAMtB,G;;KAAAA,G;AA6FN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}