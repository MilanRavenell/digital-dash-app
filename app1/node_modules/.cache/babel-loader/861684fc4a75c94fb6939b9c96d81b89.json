{"ast":null,"code":"var _jsxFileName = \"/Users/milanravenell/Documents/digital_dash/digital-dash-app/src/MainContentContainer.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport TabSwitchContainer from './TabSwitchContainer';\nimport AggregatedStatsContainer from './AggregatedStatsContainer';\nimport PostsContainer from './PostsContainer';\nimport IndividualPostPopUp from './IndividualPostPopUp';\nimport ProfilePicker from './ProfilePicker';\nimport { getGraphData, getAggregatedStats } from './data-manipulations';\nimport './styles/MainContentContainer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MainContentContainer = _ref => {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const timeframeNames = data.timeframes.map(timeframe => timeframe.name);\n  const profileNames = data.profiles.map(profile => profile.username);\n  const [state, setState] = React.useState({\n    profiles: profileNames,\n    timeframe: data.timeframes[0],\n    popUpPost: null\n  });\n  const handleProfileChange = React.useCallback(newValue => {\n    setState(prevState => ({ ...prevState,\n      profiles: newValue\n    }));\n  }, []);\n  const handleTimeFrameChange = React.useCallback(newValue => {\n    const timeframeIndex = timeframeNames.indexOf(newValue);\n    setState(prevState => ({ ...prevState,\n      timeframe: data.timeframes[timeframeIndex]\n    }));\n  }, []);\n  const setPopUpPost = React.useCallback(post => {\n    setState(prevState => ({ ...prevState,\n      popUpPost: post\n    }));\n  }, []);\n\n  const clearPopUpPost = () => {\n    setState(prevState => ({ ...prevState,\n      popUpPost: null\n    }));\n  };\n\n  const filterRecordsByTimeframeAndUsername = () => {\n    const profileRecords = data.records.filter(record => state.profiles.includes(record.username));\n    const partitionDate = state.timeframe.partitionDate;\n\n    if (partitionDate === null) {\n      return profileRecords;\n    }\n\n    return profileRecords.filter(record => new Date(record['Date']) > new Date(partitionDate));\n  };\n\n  const filteredRecords = filterRecordsByTimeframeAndUsername();\n  const aggregatedData = getAggregatedStats(filteredRecords, data.metrics);\n  const graphData = getGraphData(filteredRecords, [...state.timeframe.graphPartitions]);\n\n  const getPostHeaders = () => {\n    const selectedProfiles = data.profiles.filter(profile => state.profiles.includes(profile.username));\n    return new Set(selectedProfiles.map(profile => profile.platform)).size > 1 || state.profiles.length === 0 ? data.postHeaders['global'] : data.postHeaders[data.profiles[data.profiles.findIndex(profile => profile.username === state.profiles[0])].platform];\n  };\n\n  const postHeaders = getPostHeaders();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MainContentContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"MainContentContainer-content\",\n      children: /*#__PURE__*/_jsxDEV(TabSwitchContainer, {\n        onChange: handleTimeFrameChange,\n        currentTabs: [state.timeframe.name],\n        tabList: timeframeNames,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"MainContentContainer-content-top\",\n          children: [/*#__PURE__*/_jsxDEV(ProfilePicker, {\n            profiles: data.profiles,\n            selectedProfileNames: state.profiles,\n            handleProfileClick: handleProfileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AggregatedStatsContainer, {\n            data: aggregatedData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PostsContainer, {\n          posts: filteredRecords,\n          headers: postHeaders,\n          graphData: graphData,\n          openPopUp: setPopUpPost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), state.popUpPost !== null && [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"MainContentContainer-popup-background\",\n      onClick: clearPopUpPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"MainContentContainer-popup\",\n      children: /*#__PURE__*/_jsxDEV(IndividualPostPopUp, {\n        post: state.popUpPost,\n        headers: postHeaders\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 22\n    }, this)]]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MainContentContainer, \"29moooSFtCfyQJ034zowEhrq2Xo=\");\n\n_c = MainContentContainer;\nexport default MainContentContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainContentContainer\");","map":{"version":3,"names":["React","TabSwitchContainer","AggregatedStatsContainer","PostsContainer","IndividualPostPopUp","ProfilePicker","getGraphData","getAggregatedStats","MainContentContainer","data","timeframeNames","timeframes","map","timeframe","name","profileNames","profiles","profile","username","state","setState","useState","popUpPost","handleProfileChange","useCallback","newValue","prevState","handleTimeFrameChange","timeframeIndex","indexOf","setPopUpPost","post","clearPopUpPost","filterRecordsByTimeframeAndUsername","profileRecords","records","filter","record","includes","partitionDate","Date","filteredRecords","aggregatedData","metrics","graphData","graphPartitions","getPostHeaders","selectedProfiles","Set","platform","size","length","postHeaders","findIndex"],"sources":["/Users/milanravenell/Documents/digital_dash/digital-dash-app/src/MainContentContainer.js"],"sourcesContent":["import React from 'react';\nimport TabSwitchContainer from './TabSwitchContainer';\nimport AggregatedStatsContainer from './AggregatedStatsContainer';\nimport PostsContainer from './PostsContainer';\nimport IndividualPostPopUp from './IndividualPostPopUp';\nimport ProfilePicker from './ProfilePicker';\n\nimport {\n    getGraphData,\n    getAggregatedStats,\n} from './data-manipulations';\n\nimport './styles/MainContentContainer.css';\n\nconst MainContentContainer = ({ data }) => {\n    const timeframeNames = data.timeframes.map(timeframe => timeframe.name);\n    const profileNames = data.profiles.map(profile => profile.username);\n\n    const [state, setState] = React.useState({\n        profiles: profileNames,\n        timeframe: data.timeframes[0],\n        popUpPost: null,\n    });\n    \n    const handleProfileChange = React.useCallback((newValue) => {\n        setState((prevState) => ({\n            ...prevState,\n            profiles: newValue,\n        }));\n    }, []);\n\n    const handleTimeFrameChange = React.useCallback((newValue) => {\n        const timeframeIndex = timeframeNames.indexOf(newValue);\n\n        setState((prevState) => ({\n            ...prevState,\n            timeframe: data.timeframes[timeframeIndex],\n        }));\n    }, []);\n\n    const setPopUpPost = React.useCallback((post) => {\n        setState((prevState) => ({\n            ...prevState,\n            popUpPost: post,\n        }));\n    }, []);\n\n    const clearPopUpPost = () => {\n        setState((prevState) => ({\n            ...prevState,\n            popUpPost: null,\n        }))\n    };\n\n    const filterRecordsByTimeframeAndUsername = () => {\n        const profileRecords = data.records.filter(record => state.profiles.includes(record.username));\n        const partitionDate = state.timeframe.partitionDate;\n\n        if (partitionDate === null) {\n            return profileRecords;\n        }\n    \n        return profileRecords.filter(record => (new Date(record['Date']) > new Date(partitionDate)));\n    }\n\n    const filteredRecords = filterRecordsByTimeframeAndUsername();\n    const aggregatedData = getAggregatedStats(filteredRecords, data.metrics);\n    const graphData = getGraphData(filteredRecords, [...state.timeframe.graphPartitions]);\n\n    const getPostHeaders = () => {\n        const selectedProfiles = data.profiles.filter(profile => (state.profiles.includes(profile.username)));\n        return (new Set(selectedProfiles.map(profile => profile.platform)).size > 1 || state.profiles.length === 0)\n            ? data.postHeaders['global']\n            : data.postHeaders[data.profiles[data.profiles.findIndex(profile => (profile.username === state.profiles[0]))].platform]\n    };\n\n    const postHeaders = getPostHeaders();\n\n    return (\n        <div className=\"MainContentContainer\">\n            <div className=\"MainContentContainer-content\">\n                <TabSwitchContainer\n                    onChange={handleTimeFrameChange}\n                    currentTabs={[state.timeframe.name]}\n                    tabList={timeframeNames}>\n                    <div className=\"MainContentContainer-content-top\">\n                        <ProfilePicker\n                            profiles={data.profiles}\n                            selectedProfileNames={state.profiles}\n                            handleProfileClick={handleProfileChange}/>\n                        <AggregatedStatsContainer\n                            data={aggregatedData}/>\n                    </div>\n                    <PostsContainer\n                        posts={filteredRecords}\n                        headers={postHeaders}\n                        graphData={graphData}\n                        openPopUp={setPopUpPost}/>\n                </TabSwitchContainer>\n            </div>\n            {\n                (state.popUpPost !== null) && [\n                    (<div className=\"MainContentContainer-popup-background\" onClick={clearPopUpPost}/>),\n                    (<div className=\"MainContentContainer-popup\">\n                        <IndividualPostPopUp post={state.popUpPost} headers={postHeaders}/>\n                    </div>)\n                ]\n            }\n        </div>\n    );\n}\n\nexport default MainContentContainer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}