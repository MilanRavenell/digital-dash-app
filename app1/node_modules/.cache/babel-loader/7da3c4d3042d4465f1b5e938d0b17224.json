{"ast":null,"code":"import _regeneratorRuntime from\"/Users/milanravenell/Documents/digital_dash/app/digital-dash-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _createForOfIteratorHelper from\"/Users/milanravenell/Documents/digital_dash/app/digital-dash-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _asyncToGenerator from\"/Users/milanravenell/Documents/digital_dash/app/digital-dash-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";var _require=require('fs'),fs=_require.promises;var _require2=require('csv-parse/sync'),parse=_require2.parse;var platforms=['twitter','youtube','tiktok'];var timeframes=['day','week','month','year'];var metrics=['views','engagements'];function get_values(){return _get_values.apply(this,arguments);}function _get_values(){_get_values=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var db_records,results,_iterator2,_step2,platform,total_records;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return get_db_records();case 2:db_records=_context.sent;results={};_iterator2=_createForOfIteratorHelper(platforms);try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){platform=_step2.value;results[platform]=get_metrics_from_records(db_records[platform]);}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}total_records=Object.values(db_records).flat();results['global']=get_metrics_from_records(total_records);_context.next=10;return fs.writeFile('public/stats.json',JSON.stringify(results));case 10:case\"end\":return _context.stop();}}},_callee);}));return _get_values.apply(this,arguments);}function get_db_records(){return _get_db_records.apply(this,arguments);}function _get_db_records(){_get_db_records=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var records,_iterator3,_step3,platform;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:records={};_iterator3=_createForOfIteratorHelper(platforms);_context2.prev=2;_iterator3.s();case 4:if((_step3=_iterator3.n()).done){_context2.next=11;break;}platform=_step3.value;_context2.next=8;return get_data_from_csv_file(\"../../data/\".concat(platform,\"_metrics.csv\"));case 8:records[platform]=_context2.sent;case 9:_context2.next=4;break;case 11:_context2.next=16;break;case 13:_context2.prev=13;_context2.t0=_context2[\"catch\"](2);_iterator3.e(_context2.t0);case 16:_context2.prev=16;_iterator3.f();return _context2.finish(16);case 19:return _context2.abrupt(\"return\",records);case 20:case\"end\":return _context2.stop();}}},_callee2,null,[[2,13,16,19]]);}));return _get_db_records.apply(this,arguments);}function get_data_from_csv_file(_x){return _get_data_from_csv_file.apply(this,arguments);}function _get_data_from_csv_file(){_get_data_from_csv_file=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(filepath){var data;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:console.log('reading: ',filepath);_context3.next=3;return fs.readFile(filepath,'utf8');case 3:data=_context3.sent;return _context3.abrupt(\"return\",parse(data,{columns:true,trim:true}));case 5:case\"end\":return _context3.stop();}}},_callee3);}));return _get_data_from_csv_file.apply(this,arguments);}function get_metrics_from_records(records){return timeframes.reduce(function(acc,timeframe){acc[timeframe]=get_total_and_average_from_records(get_records_in_timeframe(timeframe,records));return acc;},{});}function get_total_and_average_from_records(records){var calculations=metrics.reduce(function(acc,metric){acc[\"total_\".concat(metric)]=0;return acc;},{});var len=records.length;var _iterator=_createForOfIteratorHelper(records),_step;try{var _loop=function _loop(){var record=_step.value;metrics.forEach(function(metric){calculations[\"total_\".concat(metric)]+=get_int_from_string(record[metric]);});};for(_iterator.s();!(_step=_iterator.n()).done;){_loop();}}catch(err){_iterator.e(err);}finally{_iterator.f();}metrics.forEach(function(metric){calculations[\"avg_\".concat(metric)]=len===0?0:calculations[\"total_\".concat(metric)]/len;});return calculations;}function get_int_from_string(number){number.replace(',','.');if(number===''){return 0;}if(number.includes('K')){return parseFloat(number.split('K')[0])*1000;}if(number.includes('M')){return parseFloat(number.split('M')[0])*1000000;}return parseFloat(number);}function get_records_in_timeframe(timeframe,records){return records;//TODO: include date with each record so this can be properly calculated\nvar cutoff={'day':'','week':'','month':'','year':''}[timeframe];return records.filter(function(record){return record.date>cutoff;});}(function(){get_values();})();","map":{"version":3,"names":["require","fs","promises","parse","platforms","timeframes","metrics","get_values","get_db_records","db_records","results","platform","get_metrics_from_records","total_records","Object","values","flat","writeFile","JSON","stringify","records","get_data_from_csv_file","filepath","console","log","readFile","data","columns","trim","reduce","acc","timeframe","get_total_and_average_from_records","get_records_in_timeframe","calculations","metric","len","length","record","forEach","get_int_from_string","number","replace","includes","parseFloat","split","cutoff","filter","date"],"sources":["/Users/milanravenell/Documents/digital_dash/app/digital-dash-app/src/db_apis/local_df_apis.js"],"sourcesContent":["const { promises: fs } = require('fs');\nconst { parse } = require('csv-parse/sync');\n\nconst platforms = ['twitter', 'youtube', 'tiktok'];\nconst timeframes = ['day', 'week', 'month', 'year'];\nconst metrics = ['views', 'engagements'];\n\nasync function get_values() {\n    const db_records = await get_db_records();\n\n    const results = {}\n    for (const platform of platforms) {\n        results[platform] = get_metrics_from_records(db_records[platform]);\n    }\n\n    const total_records = Object.values(db_records).flat();\n\n    results['global'] = get_metrics_from_records(total_records);\n    \n    await fs.writeFile('public/stats.json', JSON.stringify(results))\n}\n\nasync function get_db_records() {\n    const records = {};\n    for (const platform of platforms) {\n        records[platform] = await get_data_from_csv_file(`../../data/${platform}_metrics.csv`);\n    }\n\n    return records;\n}\n\nasync function get_data_from_csv_file(filepath) {\n    console.log('reading: ', filepath)\n    const data = await fs.readFile(filepath, 'utf8');\n    return parse(data, {columns: true, trim: true});\n}\n\nfunction get_metrics_from_records(records) {\n    return timeframes\n        .reduce((acc, timeframe) => {\n            acc[timeframe] = get_total_and_average_from_records(get_records_in_timeframe(timeframe, records))\n            return acc;\n        }, {});\n}\n\nfunction get_total_and_average_from_records(records) {\n    const calculations = metrics.reduce((acc, metric) => {\n        acc[`total_${metric}`] = 0\n        return acc\n    }, {});\n\n    const len = records.length;\n\n    for (const record of records) {\n        metrics.forEach((metric) => {\n            calculations[`total_${metric}`] += get_int_from_string(record[metric]);\n        });\n    }\n\n    metrics.forEach((metric) => {\n        calculations[`avg_${metric}`] = (len === 0) ? 0 : calculations[`total_${metric}`] / len\n    });\n\n    return calculations;\n}\n\nfunction get_int_from_string(number) {\n    number.replace(',', '.')\n    \n    if (number === '') {\n        return 0;\n    }\n    if (number.includes('K')) {\n        return parseFloat(number.split('K')[0]) * 1000;\n    }\n    if (number.includes('M')) {\n        return parseFloat(number.split('M')[0]) * 1000000;\n    }\n\n    return parseFloat(number)\n}\n\nfunction get_records_in_timeframe(timeframe, records) {\n    return records;\n\n    //TODO: include date with each record so this can be properly calculated\n    const cutoff = {\n        'day': '',\n        'week': '',\n        'month': '',\n        'year': '',\n    }[timeframe];\n\n    return records.filter((record) => (record.date > cutoff));\n}\n\n\n(function() {\n    get_values()\n}())"],"mappings":"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"},"metadata":{},"sourceType":"module"}